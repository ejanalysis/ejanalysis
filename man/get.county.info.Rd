% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.county.info.R
\name{get.county.info}
\alias{get.county.info}
\title{Get info on US Counties}
\usage{
get.county.info(query, fields = "all")
}
\arguments{
\item{query}{Vector of search terms.
Can be county's 5-digit FIPS code(s) (as numbers or strings with numbers),
and also could be 'countyname, statename' (fullname, exactly matching formats in countiesall$fullname, but case insensitive).}

\item{fields}{Character string optional defaults to 'all' but can specify 'countyname' 'ST' and/or 'FIPS.COUNTY'}
}
\value{
Returns a data.frame or vector of results depending on fields selected.
Returns a data.frame (if query has 2+ elements), 'QUERY' as first column, and then all or specified fields of information, covering matching counties,
or NA if certain problems arise.
If no query term, or fields not specified, then all information fields are returned:
QUERY, ST, countyname, FIPS.COUNTY, statename, fullname
}
\description{
Function that reports some or all of a table of data
  about queried (or all) US Counties (and county equivalents)
  for 1 or more counties. Query terms can be 5-digit FIPS,
  or 'countyname, statename', or just statename or just 2-letter state abbrev.
  'Montgomery, MD' will not work. 'Montgomery County, Maryland' will work.

  Requested fields can include any of these: "ST", "countyname", "FIPS.COUNTY", "statename", "fullname"
}
\details{
Converted basic data to data, so now can also say data(counties, package='proxistat') or x <- countiesall via lazy loading. \cr
  help(county.names, package='choroplethr') \cr
  data(county.names) \cr
  compare that function to this one: \cr
  > length(county.names[,1]) \cr
  [1] 3142 \cr
  > length(get.county.info()[,1]) \cr
  > head(county.names) \cr
  Also see:
   \url{https://www.census.gov/geographies/reference-files/time-series/geo/gazetteer-files.html}

  Note this other possible list of abbreviations (not used) lacks US, PR, DC:  \cr
  require(datasets); state.abb \cr
  Note another possible list of States, abbrev, FIPS
  which has island areas but not US total and not leading zeroes on FIPS: \cr
  require(acs) \cr
  print(fips.state) \cr
}
\examples{
 testdata <- c('01001', 1001, '1001', "Montgomery County, Maryland", "Montgomery County, MD", 'montgomery county, maryland', "Montgomery County MD", "MontgomeryCountyMD", "Montgomery County", "NY")
 testonlystates <- c('NY', 'NJ')
 get.county.info(testdata)
 get.county.info(testonlystates)
 get.county.info(c('New Jersey'))

}
