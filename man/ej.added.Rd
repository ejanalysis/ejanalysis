% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ej.added.R
\name{ej.added}
\alias{ej.added}
\title{Contribution of each place to net excess people-points in demographic group}
\usage{
ej.added(e, d, p, vs = "nond", silent = TRUE)
}
\arguments{
\item{e}{Environmental indicator}

\item{d}{Demographic indicator}

\item{p}{Population count (universe for d)}

\item{vs}{Reference group, optional, 'nond' by default
which means the reference group is everyone other than the d group (everyone else),
but can also specify 'avg' in which case the overall average value
including the d group is used as the reference value.}

\item{silent}{Optional, TRUE by default, in which case more details are printed.}
}
\value{
Returns numeric vector
}
\description{
US total sum of net excess vulnerable * E = net excess people-points
and contribution of one place = what the EJ Index intends to indicate
}
\details{
WORK IN PROGRESS. **** e.g.,  presumes one setting for vs..... ******
Directly calculate total number of excess people-points in a demographic subgroup,
across all locations
**** here by default defining "excess" as above
what it would be if e in d group were same as e in nond group.**** \cr
where people-points are e*p*d \cr
e = environmental points or individual risk (vector of places) \cr
p = population counts (vector of places) \cr
d = demographic fraction that is in specified demographic group (vector of places) \cr \cr

For example, if e=cancer risk (individual risk) and p=pop and d=%lowincome,
value returned is number of cases among lowincome individuals in excess of what it
would be if their average risk was the same as that of nonlowincome individuals. \cr
net excess vulnerable * E = net excess people-points \cr
vs can be 'avg' or 'nonD' (default) (not case sensitive),  \cr
for, respectively, excess cases relative to risk scenario where  \cr
avg d's e is set to that of avg person (all people including d and nonD), \cr
or avg d's e is set to that of avg nonD person.
}
\examples{
x=data.frame(pop=rep(1000, 10), pct=0.05+6*(1:10)/100, e= (10*(1:10))/100 )
y=ej.added(x$e, x$pct, x$pop, silent=FALSE)
}
