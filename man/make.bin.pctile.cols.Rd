% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make.bin.pctile.cols.R
\name{make.bin.pctile.cols}
\alias{make.bin.pctile.cols}
\title{Weighted Percentiles and Bin Numbers for Each Column, by zone, such as percentiles within each State}
\usage{
make.bin.pctile.cols(
  raw.data.frame,
  weights = NULL,
  zone = NULL,
  as.df = TRUE,
  prefix.bin = "bin.",
  prefix.pctile = "pctile.",
  cutpoints = c((0:9)/10, 0.95, 1),
  labels = 1:11
)
}
\arguments{
\item{raw.data.frame}{Data.frame of values}

\item{weights}{Optional Numeric vector of weights to create weighted percentiles, such as population-weighted quantiles. Unweighted if not specified. Vector same length as number of rows in data.frame.}

\item{zone}{NULL by default, but if a vector is provided, it defines zones to group by, so percentiles are within a given zone only.}

\item{as.df}{Optional logical TRUE by default, in which case matrix results are converted to data.frame}

\item{prefix.bin}{Optional character element, default is 'bin.', provides text to paste to beginning of input data.frame column names to use as bin output column names.}

\item{prefix.pctile}{Optional character element, default is 'pctile.', provides text to paste to beginning of input data.frame column names to use as pctile output column names.}

\item{cutpoints}{Default is 1:11. see \code{\link[=make.bin.cols]{make.bin.cols()}}}

\item{labels}{Default is c(0.00, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90,  0.95,  1.00). see \code{\link[=make.bin.cols]{make.bin.cols()}}}
}
\value{
Returns a matrix or data.frame
}
\description{
This function just combines \code{\link[=make.pctile.cols]{make.pctile.cols()}} and \code{\link[=make.bin.cols]{make.bin.cols()}}.
Takes a data.frame of values and returns a data.frame (or matrix) of percentiles,
showing the percentile of a value within all values in its column, as well as bin numbers,
showing what bin each falls into, based on specified cutpoints defining bins. \cr\cr
** Work in progress/ not fully tested, e.g., need to test if all code below works with both as.df=TRUE and as.df=FALSE
}
\seealso{
\code{\link[=make.bin.pctile.cols]{make.bin.pctile.cols()}} to call functions below, converting columns of values to percentiles and then bins
\code{\link[=assign.pctiles]{assign.pctiles()}} for one vector, assign (weighted) percentile (quantile) to each value within its zone (subset)
\code{\link[=assign.pctiles.alt2]{assign.pctiles.alt2()}} as an alternative method, to replicate assign.pctiles, but not by zone
\code{\link[=get.pctile]{get.pctile()}} to get (weighted) percentile of just 1+ values within given vector of values
\code{\link[=make.pctile.cols]{make.pctile.cols()}} for a data.frame, assign percentiles, return a same-sized df that is wtd.quantile of each value within its column
\code{\link[=make.pctile.cols.alt2]{make.pctile.cols.alt2()}} as an alternative method, to replicate make.pctile.cols
\code{\link[=assign.map.bins]{assign.map.bins()}} for one vector (or data.frame) of values (e.g. percentiles), return same-sized df that is bin number (map color bin) using preset breaks.
\code{\link[=make.bin.cols]{make.bin.cols()}} for a data.frame of values (e.g. percentiles), return same-sized df that is bin number (map color bin) using preset breaks.
\code{\link[=write.pctiles]{write.pctiles()}} to save file that is lookup table of percentiles for columns of a data.frame
\code{\link[=write.pctiles.by.zone]{write.pctiles.by.zone()}} to save file that is lookup table of percentiles for columns of a data.frame, for each geographic zone (subset of rows)
\code{\link[=write.wtd.pctiles]{write.wtd.pctiles()}} to save file that is lookup table of weighted percentiles for columns of a data.frame
\code{\link[=write.wtd.pctiles.by.zone]{write.wtd.pctiles.by.zone()}} to save file that is lookup table of weighted percentiles for columns of a data.frame, for each geographic zone (subset of rows)
\code{\link[=lookup.pctile]{lookup.pctile()}} to look up current approx weighted percentiles in a lookup table that is already in global memory
}
